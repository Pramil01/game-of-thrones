{"version":3,"sources":["components/SearchBar.js","components/Loader.js","components/ImageList.js","img/Got.jpg","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","state","term","className","onSubmit","e","preventDefault","type","placeholder","value","this","onChange","setState","target","props","Component","Loader","text","ImageList","images","item","map","data","alt","firstName","src","imageUrl","title","fullName","family","id","isLoaded","style","width","height","padding","color","App","fullItems","onSearchChange","length","filter","element","toUpperCase","includes","a","fetch","response","json","backgroundColor","minHeight","Got","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGqBA,E,4MACjBC,MAAQ,CAACC,KAAO,I,4CAChB,WAAU,IAAD,OACL,OACI,qBAAKC,UAAU,aAAf,SACI,sBAAMA,UAAU,UAAUC,SAAU,SAACC,GAAD,OAAKA,EAAEC,kBAA3C,SACI,sBAAKH,UAAW,QAAhB,UACA,qDACA,uBAAOI,KAAK,OACZC,YAAY,6BACZC,MAAOC,KAAKR,KACZS,SAAU,SAACN,GAAK,EAAKO,SAAS,CAACV,KAAMG,EAAEQ,OAAOJ,QAAQ,EAAKK,MAAMH,SAASN,EAAEQ,OAAOJ,qB,GAXhEM,aCOxBC,EAVA,SAACF,GACZ,OACI,qBAAKX,UAAU,mBAAf,SACI,qBAAKA,UAAU,qBAAf,SACKW,EAAMG,UCDFC,G,kKAEjB,WACE,IAAMC,EAAST,KAAKI,MAAMM,KAAKC,KAAI,SAACC,GAClC,OACA,qBAAmBnB,UAAU,YAA7B,SACE,sBAAKA,UAAU,kBAAf,UACA,qBAAKA,UAAU,kBAAf,SACE,qBAAKoB,IAAKD,EAAKE,UAAWC,IAAKH,EAAKI,aAEpC,sBAAKvB,UAAU,iBAAf,UACE,6BAAKmB,EAAKK,QACV,4BAAIL,EAAKM,WACT,4BAAIN,EAAKO,gBARLP,EAAKQ,OAcf,OACI,8BACI,qBAAK3B,UAAU,SAAf,SACCO,KAAKI,MAAMiB,SAAWZ,EAAQ,cAAC,EAAD,CAAQF,KAAK,uB,GAtBrBF,cCHxB,MAA0B,gCCKrCiB,EAAM,CACRC,MAAM,OACNC,OAAO,iBACPC,QAAQ,YACRC,MAAM,WA8BOC,E,4MA3BbpC,MAAQ,CAAC8B,UAAU,EAAMX,KAAM,GAAIkB,UAAU,I,EAM7CC,eAAgB,SAACrC,GACE,IAAdA,EAAKsC,OACR,EAAK5B,SAAS,CAACQ,KAAM,EAAKnB,MAAMqC,UAAUG,QAAO,SAACC,GAAD,OAAWA,EAAQd,SAASe,cAAcC,SAAS1C,EAAKyC,oBAGvG,EAAK/B,SAAS,CAACQ,KAAK,EAAKnB,MAAMqC,a,8FAVjC,8BAAAO,EAAA,sEAC2BC,MAAM,4CADjC,cACUC,EADV,gBAEuBA,EAASC,OAFhC,OAEU1B,EAFV,OAGIZ,KAAKE,SAAS,CAACmB,UAAS,EAAKX,KAAKE,EAAKgB,UAAUhB,IAHrD,gD,0EAaF,WACE,MAA0BZ,KAAKT,MAAzB8B,EAAN,EAAMA,SAAWX,EAAjB,EAAiBA,KACjB,OACE,sBAAMY,MAAO,CAACG,QAAU,WAAWc,gBAAiB,UAAUC,UAAU,SAAxE,UACE,qBAAK3B,IAAI,UAAUE,IAAK0B,EAAKnB,MAAOA,IACpC,cAAC,EAAD,CAAWrB,SAAUD,KAAK6B,iBAC1B,uBACA,cAAC,EAAD,CAAWR,SAAUA,EAAUX,KAAMA,W,GAtB3BgC,IAAMrC,WCCTsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.57d4bcf5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './SearchBar.css'\r\n\r\nexport default class SearchBar extends Component {\r\n    state = {term : ''};\r\n    render() {\r\n        return (\r\n            <div className=\"ui segment\">\r\n                <form className=\"ui form\" onSubmit={(e)=>e.preventDefault()}>\r\n                    <div className =\"field\">\r\n                    <label>Character Search</label>\r\n                    <input type=\"text\" \r\n                    placeholder=\"Search your character here\" \r\n                    value={this.term} \r\n                    onChange={(e)=>{this.setState({term :e.target.value});this.props.onChange(e.target.value)}}\r\n                    />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const Loader = (props) => {\r\n    return (\r\n        <div className=\"ui active dimmer\">\r\n            <div className=\"ui big text loader\">\r\n                {props.text}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader\r\n","import React, { Component } from 'react';\r\nimport Loader from './Loader.js'\r\nimport './ImageList.css'\r\nexport default class ImageList extends Component {\r\n \r\n    render() {\r\n      const images = this.props.item.map((data)=>{\r\n        return (\r\n        <div key={data.id} className=\"flip-card\">\r\n          <div className=\"flip-card-inner\">\r\n          <div className=\"flip-card-front\">\r\n            <img alt={data.firstName} src={data.imageUrl}/>\r\n            </div>\r\n            <div className=\"flip-card-back\">\r\n              <h1>{data.title}</h1>\r\n              <p>{data.fullName}</p>\r\n              <p>{data.family}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        );\r\n      });\r\n        return (\r\n            <div>\r\n                <div className=\"Images\" >\r\n                {this.props.isLoaded ? images: <Loader text=\"Loading...\"/>} \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Got.9c99e47b.jpg\";","import React from 'react';\nimport SearchBar from './components/SearchBar';\nimport ImageList from './components/ImageList';\nimport Got from './img/Got.jpg';\n\nlet style={\n  width:'100%',\n  height:'10% !important',\n  padding:' 0px 30px',\n  color:'#ffffff'\n}\nclass App extends React.Component {\n  state = {isLoaded: false,item: [] ,fullItems:[]};\n    async componentDidMount(){\n        const response = await fetch('https://thronesapi.com/api/v2/Characters');\n        const data = await response.json();\n        this.setState({isLoaded:true,item:data,fullItems:data});\n      }\n  onSearchChange =(term)=>{\n    if(term.length!==0){\n    this.setState({item :this.state.fullItems.filter((element)=>element.fullName.toUpperCase().includes(term.toUpperCase()))});\n    }\n    else{\n      this.setState({item:this.state.fullItems});\n    }\n  }\n  render(){\n    const{isLoaded , item } = this.state;\n    return (\n      <div  style={{padding : '20px 0px',backgroundColor: '#000000',minHeight:'100vh'}}>\n        <img alt=\"GotLogo\" src={Got} style={style}/>\n        <SearchBar onChange={this.onSearchChange}/>\n        <br />\n        <ImageList isLoaded={isLoaded} item={item}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}